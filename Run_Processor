import os
import sys
import logging
import pandas as pd
from typing import Dict, List

# Add the project root to Python path
project_root = os.path.dirname(os.path.abspath(__file__))
sys.path.append(project_root)

def setup_logging():
    """Configure logging with appropriate format and level"""
    log_dir = os.path.join(project_root, 'logs')
    os.makedirs(log_dir, exist_ok=True)
    
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(levelname)s - %(message)s',
        handlers=[
            logging.StreamHandler(),
            logging.FileHandler(os.path.join(log_dir, 'qb_valuation.log'))
        ]
    )

def inspect_data_files():
    """Inspect the structure of input data files"""
    data_dir = os.path.join(project_root, 'Data')
    
    # Load and inspect pbp data
    pbp_path = os.path.join(data_dir, 'Raw', 'pbp_stats.csv')
    pbp_data = pd.read_csv(pbp_path, nrows=1)
    print("\nPlay-by-play data columns:")
    print(pbp_data.columns.tolist())
    
    # Load and inspect players data
    players_path = os.path.join(data_dir, 'Raw', 'players.csv')
    players_data = pd.read_csv(players_path, nrows=1)
    print("\nPlayers data columns:")
    print(players_data.columns.tolist())

def main():
    """Main execution function"""
    setup_logging()
    logging.info("Starting QB valuation analysis")
    
    try:
        # First inspect the data files
        inspect_data_files()
        
    except Exception as e:
        logging.error(f"Error in main execution: {str(e)}")
        raise

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        logging.error(f"Error in main: {str(e)}")
        raise
